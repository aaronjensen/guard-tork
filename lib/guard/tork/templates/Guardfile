tork_event_handler = proc do |(event, test_file, *details)|
  message = [event.upcase, test_file].join(' ')
  case event.to_sym
  when :absorb
    UI.info 'tork: Overhead absorbed. Ready for testing!'
  when :fail
    UI.error message
  when :fail_now_pass
    Notifier.notify details, :title => test_file, :image => :success
  when :pass_now_fail
    Notifier.notify details, :title => test_file, :image => :failure
  else
    UI.info message
  end
end

guard :tork, :event_handler => tork_event_handler do
  # Reload tork when these change
  watch('config/application.rb') { :reload }
  watch('config/environment.rb') { :reload }
  watch('config/environments/test.rb') { :reload }
  watch(%r{^config/initializers/.+\.rb$}) { :reload }
  watch('Gemfile') { :reload }
  watch('Gemfile.lock') { :reload }
  watch('spec/spec_helper.rb') { :reload }
  watch('test/test_helper.rb') { :reload }

  #ENV['TORK_CONFIGS'] = 'your_value_here'
  watch(%r{^(test|spec)/.*(?:\1_.+|.+_\1)\.rb$})
end
